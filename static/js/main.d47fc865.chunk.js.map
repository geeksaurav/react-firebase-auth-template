{"version":3,"sources":["serviceWorker.js","components/Session/context.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","constants/routes.js","components/SignOut/index.js","components/Navigation/index.js","components/Landing/index.js","components/SignUp/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Admin/index.js","components/App/index.js","index.js"],"names":["Boolean","window","location","hostname","match","AuthUserContext","React","createContext","FirebaseContext","withFirebase","Component","props","Consumer","firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","app","initializeApp","this","db","database","withAuthentication","state","authUser","listener","onAuthStateChanged","setState","Provider","value","withAuthorization","condition","history","push","compose","withRouter","onClick","className","NavigationAuth","to","SignOut","NavigationNonAuth","Navigation","Landing","INIT_STATE","username","passwordOne","passwordTwo","showPassword","error","SignUpButton","styled","Button","background","margin","width","border","borderRadius","boxShadow","color","height","padding","SignUpFormBase","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","onChange","target","name","onSubmit","then","catch","isValid","style","TextField","label","variant","FormControl","InputLabel","htmlFor","OutlinedInput","id","type","endAdornment","InputAdornment","position","IconButton","aria-label","onMouseDown","edge","labelWidth","disabled","size","message","SignUpLink","SignUpForm","SignUpPage","ForgotPassword","PasswordForgetFormBase","isInvalid","PasswordForgotLink","PasswordForgetForm","PasswordForgetPage","SignInButton","SignInFormBase","SignInForm","SignInPage","Change","INITIAL_STATE","PasswordChangeForm","PasswordChange","AdminPage","exact","path","component","LandingPage","HomePage","AccountPage","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.d47fc865.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;\n","import React from \"react\";\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import app from \"firebase/app\";\n// eslint-disable-next-line\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDz54za_Fht_PNM4jhFsxvhDuP4xQu_DSg\",\n  authDomain: \"react-firebase-auth-temp.firebaseapp.com\",\n  databaseURL: \"https://react-firebase-auth-temp.firebaseio.com\",\n  projectId: \"react-firebase-auth-temp\",\n  storageBucket: \"react-firebase-auth-temp.appspot.com\",\n  messagingSenderId: \"814457360561\",\n  appId: \"1:814457360561:web:0872a03bd8d64adb0f9290\",\n  measurementId: \"G-RYELS3CLFP\"\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(firebaseConfig);\n    this.auth = app.auth();\n    this.db = app.database();\n  }\n\n  // ! *** Auth API ***\n  doCreateUserWithEmailAndPassword = (email, password) => {\n    return this.auth.createUserWithEmailAndPassword(email, password);\n  };\n\n  doSignInWithEmailAndPassword = (email, password) => {\n    return this.auth.signInWithEmailAndPassword(email, password);\n  };\n\n  doSignOut = () => {\n    return this.auth.signOut();\n  };\n\n  doPasswordReset = email => {\n    return this.auth.sendPasswordResetEmail(email);\n  };\n\n  doPasswordUpdate = password => {\n    return this.auth.currentUser.updatePassword(password);\n  };\n\n  // ! *** User Api *** Not really up for this but anyways\n\n  // user = uid => this.db.ref(`users/${uid}`);\n\n  // users = () => this.db.ref(\"users\");\n}\n\nexport default Firebase;\n","import FirebaseContext, { withFirebase } from \"./context\";\nimport Firebase from \"./firebase\";\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };\n","import React from \"react\";\n\nimport { withFirebase } from \"../Firebase\";\nimport { AuthUserContext } from \"../Session\";\n\nconst withAuthentication = Component => {\n  class withAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        authUser: null\n      };\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        authUser\n          ? this.setState({ authUser })\n          : this.setState({ authUser: null });\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n\n  return withFirebase(withAuthentication);\n};\n\nexport default withAuthentication;\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\";\n\nimport AuthUserContext from \"./context\";\nimport { withFirebase } from \"../Firebase\";\nimport * as ROUTES from \"../../constants/routes\";\n\nconst withAuthorization = condition => Component => {\n  class withAuthorization extends React.Component {\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        if (!condition(authUser)) {\n          this.props.history.push(ROUTES.SIGN_IN);\n        }\n      });\n    }\n    componentWillUnmount() {\n      this.listener();\n    }\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return compose(withRouter, withFirebase)(withAuthorization);\n};\n\nexport default withAuthorization;\n","export const LANDING = \"/\";\nexport const SIGN_UP = \"/signup\";\nexport const SIGN_IN = \"/signin\";\nexport const HOME = \"/home\";\nexport const ACCOUNT = \"/account\";\nexport const ADMIN = \"/admin\";\nexport const PASSWORD_FORGET = \"/resetpassword\";\n","import React from \"react\";\nimport { withFirebase } from \"../Firebase\";\n\nconst SignOutButton = ({ firebase }) => (\n  <button onClick={() => firebase.doSignOut()} className='signout'>\n    Sign Out\n  </button>\n);\n\nexport default withFirebase(SignOutButton);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./index.css\";\n\nimport { AuthUserContext } from \"../Session\";\n\nimport SignOutButton from \"../SignOut\";\n\nimport * as ROUTES from \"../../constants/routes\";\n\nconst Navigation = () => (\n  <div>\n    <AuthUserContext.Consumer>\n      {authUser => (authUser ? <NavigationAuth /> : <NavigationNonAuth />)}\n    </AuthUserContext.Consumer>\n  </div>\n);\n\nconst NavigationAuth = () => (\n  <div>\n    <ul>\n      <li>\n        <Link to={ROUTES.LANDING}>Landing</Link>\n      </li>\n      <li>\n        <Link to={ROUTES.HOME}>Home</Link>\n      </li>\n      <li>\n        <Link to={ROUTES.ACCOUNT}>Account</Link>\n      </li>\n      <SignOutButton />\n    </ul>\n  </div>\n);\n\nconst NavigationNonAuth = () => (\n  <div>\n    <ul>\n      <li>\n        <Link to={ROUTES.SIGN_IN}>Sign In</Link>\n      </li>\n      <li>\n        <Link to={ROUTES.LANDING}>Landing</Link>\n      </li>\n    </ul>\n  </div>\n);\n\nexport default Navigation;\n","import React from \"react\";\n\nconst Landing = () => (\n  <div>\n    <h1>Landing</h1>\n  </div>\n);\n\nexport default Landing;\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\";\n\nimport { styled } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport { withFirebase } from \"../Firebase\";\nimport * as ROUTES from \"../../constants/routes\";\n\nconst INIT_STATE = {\n  username: \"\",\n  email: \"\",\n  passwordOne: \"\",\n  passwordTwo: \"\",\n  showPassword: \"\",\n  error: \"\"\n};\n\nconst SignUpButton = styled(Button)({\n  background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\n  margin: \"10px\",\n  width: \"150px\",\n  border: 0,\n  borderRadius: 3,\n  boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n  color: \"white\",\n  height: 48,\n  padding: \"0 30px\"\n});\n\nconst SignUpPage = () => (\n  <center>\n    <h1>SignUp</h1>\n    <SignUpForm />\n  </center>\n);\n\nclass SignUpFormBase extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INIT_STATE };\n  }\n\n  handleClickShowPassword = () => {\n    this.setState({ showPassword: !this.state.showPassword });\n  };\n\n  handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onSubmit = event => {\n    event.preventDefault();\n    const { username, email, passwordOne } = this.state;\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      // ? Not using this cause db is not cononected\n      // .then(authUser => {\n      //   // Create a user in your Firebase realtime database\n      //   return this.props.firebase.user(authUser.user.uid).set({\n      //     username,\n      //     email\n      //   });\n      // })\n      .then(authUser => {\n        this.setState({ ...INIT_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n  };\n\n  render() {\n    const { username, email, passwordOne, passwordTwo, error } = this.state;\n    const isValid =\n      passwordOne !== passwordTwo ||\n      passwordOne === \"\" ||\n      email === \"\" ||\n      username === \"\";\n\n    return (\n      <div>\n        <form onSubmit={this.onSubmit} style={{ margin: \"10px\" }}>\n          <div>\n            <TextField\n              name='username'\n              label='Full Name'\n              value={username}\n              variant='outlined'\n              onChange={this.onChange}\n              style={{ margin: \"10px\", width: \"250px\" }}\n            />\n            <TextField\n              name='email'\n              label='Email Address'\n              value={email}\n              variant='outlined'\n              onChange={this.onChange}\n              style={{ margin: \"10px\", width: \"250px\" }}\n            />\n          </div>\n          <div>\n            <FormControl\n              style={{ margin: \"10px\", width: \"250px\" }}\n              variant='outlined'\n            >\n              <InputLabel htmlFor='outlined-adornment-passwordone'>\n                Password\n              </InputLabel>\n              <OutlinedInput\n                id='outlined-adornment-passwordone'\n                name='passwordOne'\n                type={this.state.showPassword ? \"text\" : \"password\"}\n                value={this.state.passwordOne}\n                onChange={this.onChange}\n                endAdornment={\n                  <InputAdornment position='end'>\n                    <IconButton\n                      aria-label='toggle password visibility'\n                      onClick={this.handleClickShowPassword}\n                      onMouseDown={this.handleMouseDownPassword}\n                      edge='end'\n                    >\n                      {this.state.showPassword ? (\n                        <Visibility />\n                      ) : (\n                        <VisibilityOff />\n                      )}\n                    </IconButton>\n                  </InputAdornment>\n                }\n                labelWidth={70}\n              />\n            </FormControl>\n            <FormControl\n              style={{ margin: \"10px\", width: \"250px\" }}\n              variant='outlined'\n            >\n              <InputLabel htmlFor='outlined-adornment-passwordtwo'>\n                Confirm Password\n              </InputLabel>\n              <OutlinedInput\n                id='outlined-adornment-passwordtwo'\n                name='passwordTwo'\n                type={this.state.showPassword ? \"text\" : \"password\"}\n                value={this.state.passwordTwo}\n                onChange={this.onChange}\n                endAdornment={\n                  <InputAdornment position='end'>\n                    <IconButton\n                      aria-label='toggle password visibility'\n                      onClick={this.handleClickShowPassword}\n                      onMouseDown={this.handleMouseDownPassword}\n                      edge='end'\n                    >\n                      {this.state.showPassword ? (\n                        <Visibility />\n                      ) : (\n                        <VisibilityOff />\n                      )}\n                    </IconButton>\n                  </InputAdornment>\n                }\n                labelWidth={70}\n              />\n            </FormControl>\n          </div>\n          <div>\n            <SignUpButton\n              disabled={isValid}\n              size='large'\n              type='submit'\n              variant='contained'\n              color='secondary'\n            >\n              Sign Up\n            </SignUpButton>\n          </div>\n          {error && <p>{error.message}</p>}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nconst SignUpForm = compose(withRouter, withFirebase)(SignUpFormBase);\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport { styled } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { withFirebase } from \"../Firebase\";\nimport * as ROUTES from \"../../constants/routes\";\n\nconst PasswordForgetPage = () => (\n  <center>\n    <h1>PasswordForget</h1>\n    <PasswordForgetForm />\n  </center>\n);\n\nconst INIT_STATE = {\n  email: \"\",\n  error: null\n};\n\nconst ForgotPassword = styled(Button)({\n  background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\n  margin: \"10px\",\n  border: 0,\n  borderRadius: 3,\n  boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n  color: \"white\",\n  height: 48,\n  padding: \"0 30px\"\n});\n\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INIT_STATE };\n  }\n\n  onSubmit = event => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INIT_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, error } = this.state;\n\n    const isInvalid = email === \"\";\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <div>\n          <TextField\n            name='email'\n            label='Email Address'\n            value={email}\n            variant='outlined'\n            onChange={this.onChange}\n            style={{ margin: \"10px\", width: \"250px\" }}\n          />\n        </div>\n        <ForgotPassword\n          disabled={isInvalid}\n          size='large'\n          type='submit'\n          variant='contained'\n          color='secondary'\n        >\n          Reset Password\n        </ForgotPassword>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst PasswordForgotLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password</Link>\n  </p>\n);\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n\nexport { PasswordForgetForm, PasswordForgotLink };\nexport default PasswordForgetPage;\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\";\n\nimport { SignUpLink } from \"../SignUp\";\nimport { PasswordForgotLink } from \"../PasswordForget\";\nimport { withFirebase } from \"../Firebase\";\nimport * as ROUTES from \"../../constants/routes\";\n\nimport { styled } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nconst SignInPage = () => (\n  <div>\n    <center>\n      <h1>SignIn</h1>\n      <SignInForm />\n      <PasswordForgotLink />\n      <SignUpLink />\n    </center>\n  </div>\n);\n\nconst INIT_STATE = {\n  email: \"\",\n  password: \"\",\n  showPassword: \"\",\n  error: null\n};\n\nconst SignInButton = styled(Button)({\n  background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\n  margin: \"10px\",\n  width: \"150px\",\n  border: 0,\n  borderRadius: 3,\n  boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n  color: \"white\",\n  height: 48,\n  padding: \"0 30px\"\n});\n\nclass SignInFormBase extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INIT_STATE };\n  }\n\n  handleClickShowPassword = () => {\n    this.setState({ showPassword: !this.state.showPassword });\n  };\n\n  handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  onSubmit = event => {\n    const { email, password } = this.state;\n\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INIT_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n\n    const isInvalid = password === \"\" || email === \"\";\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <div>\n          <TextField\n            name='email'\n            label='Email Address'\n            value={email}\n            variant='outlined'\n            onChange={this.onChange}\n            style={{ margin: \"10px\", width: \"250px\" }}\n          />\n        </div>\n        <div>\n          <FormControl\n            style={{ margin: \"10px\", width: \"250px\" }}\n            variant='outlined'\n          >\n            <InputLabel htmlFor='outlined-adornment-password'>\n              Password\n            </InputLabel>\n            <OutlinedInput\n              id='outlined-adornment-password'\n              name='password'\n              type={this.state.showPassword ? \"text\" : \"password\"}\n              value={this.state.password}\n              onChange={this.onChange}\n              endAdornment={\n                <InputAdornment position='end'>\n                  <IconButton\n                    aria-label='toggle password visibility'\n                    onClick={this.handleClickShowPassword}\n                    onMouseDown={this.handleMouseDownPassword}\n                    edge='end'\n                  >\n                    {this.state.showPassword ? (\n                      <Visibility />\n                    ) : (\n                      <VisibilityOff />\n                    )}\n                  </IconButton>\n                </InputAdornment>\n              }\n              labelWidth={70}\n            />\n          </FormControl>\n        </div>\n        <SignInButton\n          disabled={isInvalid}\n          size='large'\n          type='submit'\n          variant='contained'\n          color='secondary'\n        >\n          Sign In\n        </SignInButton>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignInForm = compose(withRouter, withFirebase)(SignInFormBase);\n\nexport default SignInPage;\n\nexport { SignInForm };\n","import React from \"react\";\nimport { withAuthorization } from \"../Session\";\n\nconst HomePage = () => (\n  <center>\n    <h1>This is Home.</h1>\n    <p>The Home Page is accessible by every signed in user.</p>\n  </center>\n);\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(HomePage);\n","import React, { Component } from \"react\";\n\nimport { withFirebase } from \"../Firebase\";\n\nimport { styled } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nconst Change = styled(Button)({\n  background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\n  margin: \"10px\",\n  width: \"150px\",\n  border: 0,\n  borderRadius: 3,\n  boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n  color: \"white\",\n  height: 48,\n  padding: \"0 30px\"\n});\n\nconst INITIAL_STATE = {\n  passwordOne: \"\",\n  passwordTwo: \"\",\n  error: null\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === \"\";\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <div>\n          <FormControl\n            style={{ margin: \"10px\", width: \"250px\" }}\n            variant='outlined'\n          >\n            <InputLabel htmlFor='outlined-adornment-passwordone'>\n              Password\n            </InputLabel>\n            <OutlinedInput\n              id='outlined-adornment-passwordone'\n              name='passwordOne'\n              type={this.state.showPassword ? \"text\" : \"password\"}\n              value={this.state.passwordOne}\n              onChange={this.onChange}\n              endAdornment={\n                <InputAdornment position='end'>\n                  <IconButton\n                    aria-label='toggle password visibility'\n                    onClick={this.handleClickShowPassword}\n                    onMouseDown={this.handleMouseDownPassword}\n                    edge='end'\n                  >\n                    {this.state.showPassword ? (\n                      <Visibility />\n                    ) : (\n                      <VisibilityOff />\n                    )}\n                  </IconButton>\n                </InputAdornment>\n              }\n              labelWidth={70}\n            />\n          </FormControl>\n          <FormControl\n            style={{ margin: \"10px\", width: \"250px\" }}\n            variant='outlined'\n          >\n            <InputLabel htmlFor='outlined-adornment-passwordtwo'>\n              Confirm Password\n            </InputLabel>\n            <OutlinedInput\n              id='outlined-adornment-passwordtwo'\n              name='passwordTwo'\n              type={this.state.showPassword ? \"text\" : \"password\"}\n              value={this.state.passwordTwo}\n              onChange={this.onChange}\n              endAdornment={\n                <InputAdornment position='end'>\n                  <IconButton\n                    aria-label='toggle password visibility'\n                    onClick={this.handleClickShowPassword}\n                    onMouseDown={this.handleMouseDownPassword}\n                    edge='end'\n                  >\n                    {this.state.showPassword ? (\n                      <Visibility />\n                    ) : (\n                      <VisibilityOff />\n                    )}\n                  </IconButton>\n                </InputAdornment>\n              }\n              labelWidth={70}\n            />\n          </FormControl>\n        </div>\n        <div>\n          <Change\n            disabled={isInvalid}\n            size='large'\n            type='submit'\n            variant='contained'\n            color='secondary'\n          >\n            Change\n          </Change>\n        </div>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React from \"react\";\n\nimport { PasswordForgetForm } from \"../PasswordForget\";\nimport PasswordChangeForm from \"../PasswordChange\";\n\nimport { AuthUserContext, withAuthorization } from \"../Session\";\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <div>\n        <h1>Account: {authUser.email}</h1>\n        <PasswordForgetForm />\n        <PasswordChangeForm />\n      </div>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(AccountPage);\n","import React, { Component } from \"react\";\n\nimport { withFirebase } from \"../Firebase\";\n\nclass AdminPage extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Admin</h1>I can add users here, but i wont.\n      </div>\n    );\n  }\n}\n\nexport default AdminPage;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Navigation from \"../Navigation\";\nimport LandingPage from \"../Landing\";\nimport SignUpPage from \"../SignUp\";\nimport SignInPage from \"../SignIn\";\nimport PasswordForgetPage from \"../PasswordForget\";\nimport HomePage from \"../Home\";\nimport AccountPage from \"../Account\";\nimport AdminPage from \"../Admin\";\n\nimport * as ROUTES from \"../../constants/routes\";\nimport { withAuthentication } from \"../Session\";\n\nconst App = () => (\n  <Router>\n    <div>\n      <Navigation />\n\n      <hr />\n      <Route exact path={ROUTES.LANDING} component={LandingPage} />\n      <Route exact path={ROUTES.SIGN_UP} component={SignUpPage} />\n      <Route exact path={ROUTES.SIGN_IN} component={SignInPage} />\n      <Route exact path={ROUTES.HOME} component={HomePage} />\n      <Route exact path={ROUTES.ACCOUNT} component={AccountPage} />\n      <Route exact path={ROUTES.ADMIN} component={AdminPage} />\n      <Route\n        exact\n        path={ROUTES.PASSWORD_FORGET}\n        component={PasswordForgetPage}\n      />\n    </div>\n  </Router>\n);\n\nexport default withAuthentication(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport App from \"./components/App\";\nimport Firebase, { FirebaseContext } from \"./components/Firebase\";\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}